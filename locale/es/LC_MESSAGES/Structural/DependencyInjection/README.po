# 
msgid ""
msgstr ""
"Project-Id-Version: DesignPatternsPHP 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-29 12:18+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: manueldose <metallica_462@hotmail.com>\n"
"Language: es\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../Structural/DependencyInjection/README.rst:2
msgid "`Dependency Injection`__"
msgstr "`Inyección de Dependencias`__"

#: ../../Structural/DependencyInjection/README.rst:5
msgid "Purpose"
msgstr "Propósito"

#: ../../Structural/DependencyInjection/README.rst:7
msgid ""
"To implement a loosely coupled architecture in order to get better testable,"
" maintainable and extendable code."
msgstr ""
"Implementar una arquitectura débilmente acoplada para obtener un código más "
"mantenible, extensible y testeable."

#: ../../Structural/DependencyInjection/README.rst:11
msgid "Usage"
msgstr "Uso"

#: ../../Structural/DependencyInjection/README.rst:13
msgid ""
"Configuration gets injected and ``Connection`` will get all that it needs "
"from ``$config``. Without DI, the configuration would be created directly in"
" ``Connection``, which is not very good for testing and extending "
"``Connection``."
msgstr ""
"``Configuration`` se inyecta y ``Connection`` obtendrá todo lo que necesita "
"de ``$config``. Sin Inyección de Dependencias, la configuración se crearía "
"directamente en ``Connection``, lo que no es muy óptimo para testear y extender "
"``Connection``."

#: ../../Structural/DependencyInjection/README.rst:18
msgid ""
"Notice we are following Inversion of control principle in ``Connection`` by "
"asking ``$config`` to implement ``Parameters`` interface. This decouples our"
" components. We don't care where the source of information comes from, we "
"only care that ``$config`` has certain methods to retrieve that information."
" Read more about Inversion of control `here "
"<http://en.wikipedia.org/wiki/Inversion_of_control>`__."
msgstr ""
"Observe que estamos siguiendo el principio de inversión de control en` `Conexión`` "
"pidiendo a ``$ config`` que implemente la interfaz de ``Parámetros``. Esto desacopla "
"nuestros componentes. No nos importa de dónde viene la fuente de información, nosotros"
"solo nos importa que ``$ config`` tenga ciertos métodos para recuperar esa información."
"Leer más sobre Inversión de control `aquí "
"<https://es.wikipedia.org/wiki/Inversi%C3%B3n_de_control>`__."

#: ../../Structural/DependencyInjection/README.rst:26
msgid "Examples"
msgstr "Ejemplos"

#: ../../Structural/DependencyInjection/README.rst:28
msgid ""
"The Doctrine2 ORM uses dependency injection e.g. for configuration that is "
"injected into a ``Connection`` object. For testing purposes, one can easily "
"create a mock object of the configuration and inject that into the "
"``Connection`` object"
msgstr ""
"Doctrine2 ORM usa inyección de dependencias e.j. para la configuración que se "
"inyecta en un objeto ``Connection``. Para propósitos de testing, uno puede fácilmente "
"crear un objeto simulado de la configuración e inyectarlo en el Objeto ``Conexión``"

#: ../../Structural/DependencyInjection/README.rst:32
msgid ""
"many frameworks already have containers for DI that create "
"objects via a configuration array and inject them where needed (i.e. in "
"Controllers)"
msgstr ""
"muchos frameworks ya tienen contenedores para inyección de dependencias que crean "
"objetos a través de una matriz de configuración y los inyecta donde sea necesario "
"(es decir, enControladores)"

#: ../../Structural/DependencyInjection/README.rst:37
msgid "UML Diagram"
msgstr "Diagrama UML"

#: ../../Structural/DependencyInjection/README.rst:44
msgid "Code"
msgstr "Código"

#: ../../Structural/DependencyInjection/README.rst:46
msgid "You can also find this code on `GitHub`_"
msgstr "Puedes encontrar el código en `GitHub`_"

#: ../../Structural/DependencyInjection/README.rst:73
msgid "Test"
msgstr "Test"
